<?xml version="1.0" encoding="UTF-8"?>
<web-app xmlns="http://java.sun.com/xml/ns/javaee"
           xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
           xsi:schemaLocation="http://java.sun.com/xml/ns/javaee
		  http://java.sun.com/xml/ns/javaee/web-app_3_0.xsd"
           version="3.0">

    <welcome-file-list>
        <welcome-file>index.jsp</welcome-file>
    </welcome-file-list>

    <filter>
        <filter-name>HiddenHttpMethodFilter</filter-name>
        <filter-class>org.springframework.web.filter.HiddenHttpMethodFilter</filter-class>
    </filter>


    <servlet>
        <servlet-name>dispatcher</servlet-name>
        <servlet-class>org.springframework.web.servlet.DispatcherServlet</servlet-class>
        <init-param>
            <param-name>contextConfigLocation</param-name>
            <param-value>classpath:dispatcher-servlet.xml</param-value>
        </init-param>
        <load-on-startup>1</load-on-startup>
    </servlet>

    <servlet-mapping>
        <servlet-name>dispatcher</servlet-name>
        <url-pattern>/</url-pattern>
    </servlet-mapping>

    <filter-mapping>
        <filter-name>HiddenHttpMethodFilter</filter-name>
        <servlet-name>dispatcher</servlet-name>
        <url-pattern>/*</url-pattern>
    </filter-mapping>

    <filter>
        <filter-name>encodingFilter</filter-name>
        <filter-class>
            org.springframework.web.filter.CharacterEncodingFilter
        </filter-class>
        <init-param>
            <param-name>encoding</param-name>
            <param-value>UTF-8</param-value>
        </init-param>
        <init-param>
            <param-name>forceEncoding</param-name>
            <param-value>true</param-value>
        </init-param>
    </filter>

    <filter-mapping>
        <filter-name>encodingFilter</filter-name>
        <url-pattern>/*</url-pattern>
    </filter-mapping>

    <listener>
        <listener-class>org.springframework.web.context.ContextLoaderListener</listener-class>
    </listener>

    <listener>
        <listener-class>org.springframework.web.context.request.RequestContextListener </listener-class>
    </listener>
    <context-param>
        <param-name>contextConfigLocation</param-name>
        <param-value>
            classpath:applicationContext.xml
        </param-value>
    </context-param>
    <!--&lt;!&ndash;用于单点退出，该过滤器用于实现单点登出功能，可选配置&ndash;&gt;-->
    <!--<listener>-->
    <!--<listener-class>org.jasig.cas.client.session.SingleSignOutHttpSessionListener</listener-class>-->
    <!--</listener>-->

    <!--<filter>-->
    <!--<filter-name>CAS Single Sign Out Filter</filter-name>-->
    <!--<filter-class>org.jasig.cas.client.session.SingleSignOutFilter</filter-class>-->
    <!--</filter>-->
    <!--<filter-mapping>-->
    <!--<filter-name>CAS Single Sign Out Filter</filter-name>-->
    <!--<url-pattern>/*</url-pattern>-->
    <!--</filter-mapping>-->
    <!---->
    <!--该过滤器负责用户的认证工作，必须启用它-->
    <!--<filter>-->
    <!--<filter-name>CASFilter</filter-name>-->
    <!--<filter-class>org.jasig.cas.client.authentication.AuthenticationFilter</filter-class>-->
    <!--<init-param>-->
    <!--<param-name>casServerLoginUrl</param-name>-->
    <!--<param-value>https://localhost:8443/cas/login</param-value>&lt;!&ndash;这里是server服务器端的配置IP&ndash;&gt;-->
    <!--</init-param>-->
    <!--<init-param>-->
    <!--<param-name>serverName</param-name>-->
    <!--<param-value>http://localhost:8080</param-value>-->
    <!--</init-param>-->
    <!--</filter>-->
    <!--<filter-mapping>-->
    <!--<filter-name>CASFilter</filter-name>-->
    <!--<url-pattern>/*.htm</url-pattern>-->
    <!--</filter-mapping>-->

    <!--该过滤器负责对ticket的校验工作，必须启用它-->
    <!--<filter>-->
    <!--<filter-name>CAS Validation Filter</filter-name>-->
    <!--<filter-class>org.jasig.cas.client.validation.Cas20ProxyReceivingTicketValidationFilter</filter-class>-->
    <!--<init-param>-->
    <!--<param-name>casServerUrlPrefix</param-name>-->
    <!--<param-value>https://localhost:8443/cas</param-value>-->
    <!--</init-param>-->
    <!--<init-param>-->
    <!--<param-name>serverName</param-name>-->
    <!--<param-value>http://localhost:8080</param-value>-->
    <!--</init-param>-->
    <!--</filter>-->
    <!--<filter-mapping>-->
    <!--<filter-name>CAS Validation Filter</filter-name>-->
    <!--<url-pattern>/*.htm</url-pattern>-->
    <!--</filter-mapping>-->

    <!--
        该过滤器负责实现HttpServletRequest请求的包裹，比如允许开发者通过HttpServletRequest的getRemoteUser()
        方法获得SSO登录用户的登录名，可选配置。
    -->
    <!---->
    <!--<filter>-->
    <!--<filter-name>CAS HttpServletRequest Wrapper Filter</filter-name>-->
    <!--<filter-class>org.jasig.cas.client.util.HttpServletRequestWrapperFilter</filter-class>-->
    <!--</filter>-->
    <!--<filter-mapping>-->
    <!--<filter-name>CAS HttpServletRequest Wrapper Filter</filter-name>-->
    <!--<url-pattern>/*</url-pattern>-->
    <!--</filter-mapping>-->

    <!--
        该过滤器使得开发者可以通过org.jasig.cas.client.util.AssertHolder
        来获得用户的登录名，比如AssertHolder.getAssertion().getPrincipal().getName().
    -->
    <!--<filter>-->
    <!--<filter-name>CAS Assertion Thread Local Filter</filter-name>-->
    <!--<filter-class>org.jasig.cas.client.util.AssertionThreadLocalFilter</filter-class>-->
    <!--</filter>-->
    <!--<filter-mapping>-->
    <!--<filter-name>CAS Assertion Thread Local Filter</filter-name>-->
    <!--<url-pattern>/*</url-pattern>-->
    <!--</filter-mapping>-->

    <!--自动根据单点登录的结果设置本系统的用户信息-->
    <!--<filter>-->
    <!--<display-name>AutoSetUserAdapterFilter</display-name>-->
    <!--<filter-name>AutoSetUserAdapterFilter</filter-name>-->
    <!--<filter-class>com.javaranger.filter.AutoSetUserAdapterFilter</filter-class>-->
    <!--</filter>-->
    <!--<filter-mapping>-->
    <!--<filter-name>AutoSetUserAdapterFilter</filter-name>-->
    <!--<url-pattern>/*</url-pattern>-->
    <!--</filter-mapping>-->

</web-app>
